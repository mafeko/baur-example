[[Task]]

  # identifier of the include
  include_id = "build"

  # Identifies the task, currently the name must be 'build'.
  name = "build"

  # Command that the task executes
  command = "./build.sh"

  # Input or Output includes that the task inherits.
  # Includes are specified in the format <filepath>#<ID>.
  # Paths are relative to the include file location.
  #Valid variables: $ROOT
  includes = ["build-inputs.toml#build-sh"]

  # Specification of task inputs like source files, Makefiles, etc
  [Task.Input]

    # Inputs specified by directories containing Golang applications
    [Task.Input.GolangSources]

      # Environment to use when discovering Golang source files
      # This can be environment variables understood by the Golang tools, like GOPATH, GOFLAGS, etc.
      # If empty the default Go environment is used.
      # Valid variables: $ROOT, $APPNAME
      environment = ["GOPATH=$ROOT/a-team/go"]

      # Paths to directories containing Golang source files.
      # All source files including imported packages are discovered,
      # files from Go's stdlib package and testfiles are ignored. Valid variables: $ROOT, $APPNAME.
      paths = ["."]

  # Specification of task outputs produced by the Task.command
  [Task.Output]

    [[Task.Output.File]]

      # Path relative to the application directory.
      # Valid variables: $ROOT, $APPNAME, $GITCOMMIT.
      path = "dist/hello-server"

      # Copy the file to a local directory.
      [Task.Output.File.FileCopy]

        # Destination directory
        # Valid variables: $ROOT, $APPNAME, $GITCOMMIT, $UUID.
        path = "/tmp/baur_build_artifacts/$APPNAME-$GITCOMMIT"
